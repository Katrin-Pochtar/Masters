version: '3.8'

services:
  bot:
    build: .
    container_name: telegram_bot
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - YANDEX_OAUTH_TOKEN=${YANDEX_OAUTH_TOKEN}
      - YANDEX_FOLDER_ID=${YANDEX_FOLDER_ID}
      - YANDEX_DISK_TOKEN=${YANDEX_DISK_TOKEN}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    networks:
      - bot_network

  db:
    image: postgres:15
    container_name: telegram_bot_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data: 